# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

jobs:
  prepare:
    docker:
      - image: python:3
    steps:
      - checkout
      - run:
          command: "pip install yaml"
      - run:
          command: "scripts/get_variablestf.py"
      - save_cache:
          key: cicd_vars
          paths:
            - deployment/cloud/aws/cicd_vars.tf

  terraform-plan:
    environment:
      TF_VAR_ecs_cluster: "botfarm"
      TF_VAR_scale_min: "1"
      TF_VAR_ecs_service: "amibot"
      TF_VAR_specs_cpu: "2"
      TF_VAR_specs_ram: "64"
      TF_VAR_image: "registry.gitlab.com/donrudo/amibot"
      TF_VAR_image_version: "0.0.4"
      TF_VAR_env: "dev"

    # Specify the execution environment. You can specify an image from Dockerhub, or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: hashicorp/terraform
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - restore_cache:
          key: cicd_vars
      - run:
          name: "Verify"
          command: "-chdir=deployment/cloud verify"
      - run:
          name: "Plan"
          command: "-chdir=deployment/cloud plan"

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  infra-workflow:
    jobs:
      - prepare
      - terraform-plan:
          context:
            - terraform