# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

jobs:
  prepare:
    docker:
      - image: python:3
    steps:
      - checkout
      - run:
          command: "python3 -m venv venv; source venv/bin/activate; python3 -m pip install PyYAML"
      - run:
          command: "source venv/bin/activate; scripts/get_variablestf.py"
      - save_cache:
          key: cicd_vars
          paths:
            - deployment/cloud/aws/cicd_vars.tf
  terraform-plan:
    # Specify the execution environment. You can specify an image from Dockerhub, or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: hashicorp/terraform
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Configure Settings"
          command: "cp configs/cloud_settings.json deployment/cloud/aws"
      - restore_cache:
          key:
            - cicd_vars
      - run:
          name: "Init"
          command: "terraform -chdir=deployment/cloud/aws init"
      - run:
          name: "Verify"
          command: "terraform -chdir=deployment/cloud/aws validate "
      - run:
          name: "Plan"
          command: "terraform -chdir=deployment/cloud/aws plan -var-file=cloud_settings.json "

  terraform-apply:
    # Specify the execution environment. You can specify an image from Dockerhub, or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: hashicorp/terraform
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Configure Settings"
          command: "cp configs/cloud_settings.json deployment/cloud/aws"
      - restore_cache:
          keys:
            - cicd_vars
      - run:
          name: "Init"
          command: "terraform -chdir=deployment/cloud/aws init"
      - run:
          name: "Deploy"
          command: "terraform -chdir=deployment/cloud/aws apply -auto-approve -var-file=cloud_settings.json"

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  infra-workflow:
    jobs:
      - prepare
      - terraform-plan:
          requires:
            - prepare
          context:
            - terraform
      - terraform-approve:
          requires:
            - terraform-plan
          type: approval
      - terraform-apply:
          requires:
            - terraform-approve
          context:
            - terraform